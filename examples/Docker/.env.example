# Open Stocks MCP Docker Environment Configuration
# 
# Copy this file to .env and fill in your credentials:
# cp .env.example .env
#
# WARNING: Never commit the .env file to version control!

# ===========================================
# REQUIRED: Robinhood Account Credentials
# ===========================================
# Your Robinhood login credentials are required for accessing
# market data and account information through the Robin Stocks API.

# Your Robinhood account username (email address)
ROBINHOOD_USERNAME=your_email@example.com

# Your Robinhood account password
ROBINHOOD_PASSWORD=your_secure_password

# ===========================================
# OPTIONAL: Logging Configuration
# ===========================================
# Adjust the logging level for debugging purposes
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
# LOG_LEVEL=INFO

# ===========================================
# OPTIONAL: Server Configuration
# ===========================================
# These are typically set via command line arguments in docker-compose.yml
# but can be overridden here if needed

# Server port (default: 3000)
# PORT=3000

# Transport type (default: http for Docker v0.4.0+)
# TRANSPORT=http

# ===========================================
# SECURITY NOTES
# ===========================================
# 1. MFA/2FA is now FULLY SUPPORTED via mobile app notifications
#    Keep your Robinhood mobile app accessible during login
# 2. Device verification is automatically handled - approve new devices in your mobile app
# 3. Use a strong, unique password for your Robinhood account
# 4. Never share or commit your .env file to version control
# 5. Consider using environment-specific credentials for different deployments
# 6. Regularly rotate your credentials for security

# ===========================================
# DEVICE VERIFICATION PROCESS
# ===========================================
# When starting the container for the first time, Robinhood may require
# device verification. The server will automatically handle this workflow:
#
# 1. Monitor logs: docker-compose logs -f
# 2. Look for: "Device verification prompt: Check robinhood app..."
# 3. Open your Robinhood mobile app
# 4. Approve the device verification notification
# 5. Wait for: "Login successful with device verification"
#
# This process typically only happens once per device/container.
