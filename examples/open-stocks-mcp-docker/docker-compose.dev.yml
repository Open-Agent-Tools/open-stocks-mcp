services:
  open-stocks-mcp-dev:
    # Build from source for development with HTTP transport
    build:
      context: ../../  # Build from project root
      dockerfile: /Dockerfile.dev
    # Name the container for easier identification
    container_name: open-stocks-mcp-server-dev
    # Restart the container automatically if it stops
    restart: unless-stopped
    # Pass environment variables from a .env file in the same directory
    # This is the recommended way to handle sensitive data like credentials
    env_file:
      - .env
    # Map the container's port 3001 to the host's port 3001 (HTTP transport)
    ports:
      - "3001:3001"
    # Health check configuration for HTTP transport
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    # Security configuration
    user: "1001:1001"  # Run as non-root user
    # Resource limits (optional but recommended for production)
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    # Define the command to run the application
    # This overrides any CMD in the base Dockerfile
    command: >
      open-stocks-mcp-server
      --transport http
      --host 0.0.0.0
      --port 3001
    # Add logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # Persistent volumes for session data and logs + development tmpfs
    volumes:
      - mcp_tokens:/home/mcp/.tokens
      - mcp_logs:/home/mcp/.local/state/mcp-servers/logs
      - type: tmpfs
        target: /tmp
        tmpfs:
          size: 100M

# Named volumes for persistent data
volumes:
  mcp_tokens:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/tokens
  mcp_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/logs

# Note:
# This is the development version that builds from source
# For production, use docker-compose.yml with the published package
#
# Persistent data will be stored in:
# - ./data/tokens/ (Robinhood session tokens)
# - ./data/logs/ (Application logs)